// I imported the "Medieval Sharp" font from Google Fonts.
@import url('https://fonts.googleapis.com/css2?family=MedievalSharp&display=swap');

// I set the scroll-behavior to smooth to enable smooth scrolling for anchor links.
html {
  scroll-behavior: smooth;
}

// This is to ensure a consistent box sizing for all elements.
* {
  box-sizing: border-box;
}

// I removed the default body margin, set the font family to MedievalSharp, and set the overflow-x to hidden to prevent any horizontal scrolling.
body {
  margin: 0;
  font-family: "medievalsharp";
  overflow-x: hidden;
}


// Website Preloader Section
// This is the styling for the main preloader container.
.main-preloader-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: transparent;
  z-index: 1000;

  // This is for the curtain animation used for the Preloader.
  .preloader-curtain {
    &:before, &:after {
      content: "";
      position: absolute;
      background: url('/Images/stars.gif');
      width: 50%;
      height: 100%;
      transition: 1.2s;
    }
    &:before {
      // This is to position the left curtain at the edge of the screen.
      left: 0;
    }
    &:after {
      // This is to position the right curtain at the edge of the screen.
      right: 0;
    }
  }

  // This is the state when the preloader is loaded.
  &.unveilCurtain {
    .preloader-curtain:before {
      // This moves the left curtain out of view.
      left: -50%;
    }
    .preloader-curtain:after {
      // This moves the right curtain out of view.
      right: -50%;
    }
    .preloader-contents {
    // This creates a fade out effect for the content and moves them upwards.
      opacity: 0;
      margin-top: -100px;
    }
  }

  // This styles the contents within the preloader container, which are the text and button. The styling is for its content's positioning, alignment, and size.
  .preloader-contents {
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    transition: 0.6s;

    // This styles the start-website-button including its size, color, and positioning.
    .start-website-button {
      display: block;
      font-size: 1.5em;
      font-weight: bold;
      color: white;
      border: 3px solid white;
      padding: 25px 0;
      text-align: center;
      width: 200px;
      border-radius: 3px;
      transition: 0.6s ease;
      cursor: pointer;

      // This changes the text and background color of the start website button when hovered.
      &:hover {
        color: black;
        background-color: white;
      }
    }

    // This is the styling for the message or text to use headphones when viewing the website. This styles its text size, color, alignment and line height.
    .use-headphone-message {
      font-size: 1em;
      color: white;
      text-align: center;
      margin-top: 100px;
      line-height: 1.4;

      // This styling sets the headphone icon's size and spacing between the text.
      .headphone-icon {
        width: 50px; 
        height: 50px;
        margin-bottom: 5px;
      }
    }
  }
}

// This is the styling for the container that stores the toggles. These includes the positioning, background color, text color, and padding.
.website-backgroundmusic-autoscroll-and-fullscreen-toggles {
  display: none; 
  position: fixed;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 10px;
  bottom: 50px;
  right: 10px;
  border-radius: 8px;
  z-index: 1500;
}

// This is the styling for the position, alignment, and cursor effect to the labels.
.website-backgroundmusic-autoscroll-and-fullscreen-toggles label {
  display: flex;
  align-items: center;
  cursor: pointer;
}

// This is to add 5 pixels of right margin to add spacing between the checkbox and text.
.website-backgroundmusic-autoscroll-and-fullscreen-toggles input {
  margin-right: 5px;
}


//Styling for the Navigation Menu
nav {
  position: fixed;
  color: white;
  text-decoration: none;
  background-color: black;
  width: 100%;
  z-index: 50;
}

// Styling for both the  nav and Navigation-Menu-Container container
nav .Navigation-Menu-Container {
  position: relative;
  max-width: 1290px;
  padding: 0px 16px;
  height: 80px;
  line-height: 80px;
  margin: auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// This is to hide the input elements in the Navigation Menu
nav input{
  display: none;
}

// Styling for the Logo Image including size and top margin
.ibong-adarna-logo img {
  height: 70px; 
  width: auto; 
  margin-top: 20px;
  cursor: pointer;
}

// Styling for the Navigational Links
.Navigation-Menu-Container .Navigation-Menu-Links {
  display: inline-flex;
}

// Styling to remove the bulletpoint
.Navigation-Menu-Links li {
  list-style: none;
}

// Styling for the Navigational Links or Anchor tags
.Navigation-Menu-Links li a {
  position: relative; 
  color: white;
  font-size: 16px;
  padding: 5px 12px;
  text-decoration: none;
}

// To add the underline on hover effect
.Navigation-Menu-Links li a::after {
  content: '';
  position: absolute;
  width: 0%;
  height: 1px;
  bottom: 0;
  left: 0;
  background-color: white;
  transition: 0.7s ease; 
}

// To unveil or expand the underline
.Navigation-Menu-Links li a:hover::after {
  width: 100%; 
}



// Styling to hide the responsive view links by default
.Navigation-Menu-Links .Responsive-View {
  display: none;
}


// Styling for the Close Button
.Navigation-Menu-Links i {
  font-size: 35px;
  margin-top: 20px;
}

// Styling for the Menu Button 
.Responsive-Menu-Button i {
  font-size: 35px;
}


// Styling for the buttons
.Navigation-Menu-Container .btn {
  display: none;
  font-size: 50px;
  color: white;
  margin-right: 20px;
  cursor: pointer;
}

.Navigation-Menu-Container .btn.Responsive-Close-Button {
  position: absolute;
  right: 10px;
  top: 15px;
}


// Media Queries 
// Media Query to style viewports that are 1024px and Below 
@media screen and (max-width: 1024px) {
  // This is to unveil the responsive menu button to open the navigation menu 
    .Navigation-Menu-Container .btn {
    display: block;
  }

  nav .Navigation-Menu-Container {
    height: 50px;
  }

  .ibong-adarna-logo img {
    height: 40px;
    width: auto;
  }

  // Styling for the Navigational links
  .Navigation-Menu-Container .Navigation-Menu-Links {
    position: fixed;
    display: block;
    background-color: black;
    padding: 50px 10px;
    height: 100vh;
    width: 100%;
    max-width: 400px;
    top: 0;
    left: -100%;
    line-height: 50px;
    overflow-y: auto;
    box-shadow: 0px 15px 15px rgba(5, 2, 2, 0.71);
    transition: all 0.7s ease;
  }

  // To unveil the navigation menu when the responsive menu button is clicked or checked
  #Responsive-Menu-Button:checked ~ .Navigation-Menu-Links {
    left: 0%;
  }

  // To hide the menu button when the menu is unveiled or open
  #Responsive-Menu-Button:checked ~ .btn.Responsive-Menu-Button {
    display: none;
  }

  // To unveil the close button when the menu is open
  #Responsive-Close-Button:checked ~ .btn.Responsive-Menu-Button {
    display: block;
  }

  // Styling for the navigation menu list items 
  .Navigation-Menu-Links li{
    margin: 50px 5px;
  }

   // Styling for the navigational menu links
  .Navigation-Menu-Links li a{
    display: block;
    padding: 0 20px;
    font-size: 30px;
  }


// This hides the website section title 
  .Navigation-Menu-Links .Website-Section-Title {
    display: none;
  }
  
  // Styling for the responsive view button 
  .Navigation-Menu-Links .Responsive-View {
    display: block;
    color: white;
    font-size: 30px;
    padding-left: 20px;
    cursor: pointer;
  }

  // On hover effect that changes background color
  .Navigation-Menu-Links .Responsive-View:hover {
    background-color: #333;
  } 
}

// I used the "anchor-offset" class to make sure that the navigation menu won't cover the content when directed to chapter 1.
.anchor-offset {
  position: relative;
  top: -80px; 
}

// Opening Section
.ibong-adarna-title { 
background: url(/Images/Opening.gif);
padding-top: 63%;
background-size: cover;
position: relative; 
}

// This is the styling for the h1 or heading 1 tag within the "ibong-adarna-title" container. The stylings include fixing its position as the user scrolls, removing any default margin, setting its font size, and its alignment.
.ibong-adarna-title h1 { 
position: fixed;
margin-top: 0;
top: 9rem;
right: 3rem;
font-size: 20vw;
line-height: .8;
text-align: center;

}

// This is the styling for the span or subheading inside the main title. It ensures that the word Adarna is seen on a new line and that its font size is smaller.
.ibong-adarna-title h1 span {
display: block;
font-size: 10vw;
}

// This styles the anchor tag (which is the start button) within the "ibong-adarna-title" including its positioning, color, size, and  text alignment
.ibong-adarna-title a {
  position: absolute;
  top: 60%;
  left: 75%;
  transform: translate(-50%, -50%); 
  padding: 12px 24px;
  font-size: 2rem;
  color: white;
  background-color: black;
  border: none;
  border-radius: 8px;
  text-decoration: none;
  text-align: center;
  transition: all 0.3s ease;
}

// This adds an on hover effect to the button including changing its color, size, and adding a shadow underneath.
.ibong-adarna-title a:hover {
  color: black;
  background-color: white;
  transform: translate(-50%, -50%) scale(1.2);
  box-shadow: rgba(0, 0, 0, 0.431);
}

// The following lines is for the styling of the Scroll Wheel Icon.

// This is responsible for the positioning the scroll icon relative to its parent, flexbox layout, and placing it slightly at the bottom.
.scroll-wheel-main-container {
  position: absolute; 
  display: flex;
  justify-content: center;
  align-items: center;
  bottom: 10%; 
  left: 50%; 
  transform: translateX(-50%); 
}

// This is the outer container of the scroll wheel icon. This sets its positioning, size, and rounded corners.
.scroll-wheel-container{
  position: relative;
  width: 30px;
  height: 60px;
  border: 3px solid white;
  border-radius: 15px;
}

// This is the inner ball animation for the scroll wheel. This styles its size, positioning, color, and rounded corners.
.scroll-wheel-ball{
  position: absolute;
  width: 18px;
  border-radius: 8px;
  background-color: white;
  top: 5px;
  left: 4px;
  bottom: 30px;
  animation: scroll-wheel-ball 1.2s ease-out infinite;
}

// I used Keyframe animations to animate the movement of the scroll-wheel ball.
@keyframes scroll-wheel-ball{
  0%{
    // The ball starts at the near top.
    bottom: 30px;
  }
  5%{
    // This moves it downward.
    top: 5px;
  }
  32%{   
    // The ball reaches at the bottom.
    bottom: 5px;
  }
  66%{
    // The ball moves back up.
    top: 30px;
    bottom: 5px;
  }
  // This is the complete cycle.
  100%{
    top: 5px;
    bottom: 30px;
  }
}


// Media Query to style viewports that are 1024px and Below
@media (max-width: 1024px) {
  .ibong-adarna-title a {
    font-size: 30px;
    top: 75%;
    left: 73%;
    padding: 10px 20px;

  }
}

// Media Query to style viewports that are 768px and Below
@media (max-width: 768px) {
  .ibong-adarna-title h1 { 
    position: fixed;
    top: 6rem;
    right: 2rem;
    font-size: 20vw;
    line-height: .8;
    margin-top: 0;
    text-align: center;
    }

  .ibong-adarna-title a {
    font-size: 20px;
    top: 75%;
    left: 73%;
    padding: 10px 20px;
  }
}

// Media Query to style viewports that are 480px and Below 
@media (max-width: 480px) {
  .ibong-adarna-title h1 { 
    position: fixed;
    top: 4rem;
    right: 2rem;
    font-size: 20vw;
    line-height: .8;
    margin-top: 0;
    text-align: center;
    }

    .ibong-adarna-title a {
      font-size: 10px;
      top: 85%;
      left: 70%;
      padding: 10px 20px;
  
    }

  // This adjusts the scrolling-effect.
  .scroll-wheel-main-container {
    bottom: 5%;
    left: 50%;
    transform: translateX(-50%);
  }

  // This adjusts the scroll-container's size.
  .scroll-wheel-container {
    width: 20px; 
    height: 40px; 
    border: 2px solid white; 
    border-radius: 10px; 
  }

  // This adjusts the scroll-wheel's ball size. 
  .scroll-wheel-ball {
    width: 9px; 
    border-radius: 5px; 
    background-color: white;
    position: absolute;
    top: 4px;
    left: 4px;
    bottom: 20px; 
  }  
}


// Chapter 1
// This is the styling for the container named "main-chapter-1-container" including its positioning, text color and size, padding, and line height.
.main-chapter-1-container { 
  position: relative;
  color: white;
  background-color: black;
  font-size: 1.5rem;
  padding: 3rem;
  line-height: 1.5;     
}


// Characters Introduction
// I also created a variable to determine the block size dynamically.
$container-block-size: max(400px, 100dvb);


// This styles the "main-ibong-adarna-section" container by setting it as a grid lay out, positioning it to relative, defining a custom property for container block size, setting a minimum block size, and giving it a white background color.
.main-ibong-adarna-section {
  display: grid;
  position: relative;
  --container-block-size: $container-block-size;
  min-block-size: $container-block-size;
  background-color: white;
}

// A grid layout and relative position used for the "main-container-for-characters" container.
.main-container-for-characters {
  display: grid;
  position: relative;
  margin-bottom: 10vh;

  // This creates a two-column layout for screens of 768 pixels and above.
  @media (min-width: 768px) {
    grid-template-columns: 1fr 1fr;
  }
}

// This sets a grid layout for the character-content container and make sure it is properly centered.
.character-content {
  display: grid;
  inline-size: 100%;
  padding-block: 50px;
  padding-inline: 60px;
  place-items: center;

  // This ensures the full height on larger screens.
  @media (min-width: 768px) {
    min-block-size: 100vh;
  }
}

// This is for how the character images would be seen in mobile or any smaller screens.
.character-image-in-mobile-view {
  // This ensures the square aspect ratio.
  aspect-ratio: 1 / 1;

  // The previous scrolling images are hidden.
  @media (min-width: 768px) {
    display: none;
  }
}

// This sets the text size (which is the character's name) for the texts within the "character-name" container.
.character-name {
  font-size: 2rem;
}

// This sets the text size and line height for the texts within the "character-description" container.
.character-description {
  font-size: 1.4rem;
  line-height: 1.5;
}

// This styles the image container on the right side including a grid layout, sticky positioning, and dynamic height.
.right-side-character-images {
  display: grid;
  position: sticky;
  inset-block-start: 0;
  block-size: $container-block-size;

  @media (width < 768px) {
    display: none;
  }
}

// Sets a grid layout and centers it.
.main-character-circle-card-container {
  display: grid;
  place-items: center;

  // Makes them overlap in the same grid cell.
  > * {
    grid-area: 1 / 1;
  }
}

// This is for the individual circular card for characters which maintains a circular shape and makes it smaller initially.
.character-circle-card {
  aspect-ratio: 1 / 1;
  scale: 0.3;
}

// This styles the images inside the circular cards by making sure it is circular and show the full aspect ratio without any distortion. 
.characters-image {
  display: block;
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
  border-radius: 50%;
}

// Ensures that the character image is normal sized.
.character-image-1 {
  scale: 1;
}

// This moves the 2nd character image diagonally.
.character-image-2 {
  translate: -15vw 35vh;
}

// This moves the 3rd character image diagonally in the opposite direction.
.character-image-3 {
  translate: 15vw 35vh;
}

// This is for the scroll animations using scroll-based timelines.
@supports (animation-timeline: scroll()) {

  // This is where I defined the scope for scroll-based animations.
  body {
    timeline-scope: --left-side-character-1-information, --left-side-character-2-information, --left-side-character-3-information;
  }

  // This is the timeline for the section.
  .main-ibong-adarna-section {
    view-timeline-name: --section;
  }

  // These are the timelines for each individual characters.
  .left-side-character-1-information {
    view-timeline-name: --left-side-character-1-information;
  }

  .left-side-character-2-information {
    view-timeline-name: --left-side-character-2-information;
  }

  .left-side-character-3-information {
    view-timeline-name: --left-side-character-3-information;
  }

  // This ensures a smooth animation and keeps the animation state after completion.
  .character-circle-card {
    animation-timing-function: linear;
    animation-fill-mode: forwards;
  }

  // These are scroll-based animations for each character card.
  .character-image-1 {
    animation-timeline: --left-side-character-1-information;
    animation-name: slide-up-first-card;
  }

  .character-image-2 {
    animation-timeline: --left-side-character-2-information;
    animation-name: sliding-up-character-circle-card;
  }

  .character-image-3 {
    animation-timeline: --left-side-character-3-information;
    animation-name: sliding-up-character-circle-card;
  }

  @keyframes slide-up-first-card {
    // This moves the character circle card at the center and ensures that it is completely visible.
    50% {
      translate: 0;
      opacity: 1;
    }
    // The character circle card slightly shrinks in size.
    90% {
      scale: 0.6;
    }
    // The character circle card fades out completely.
    100% {
      opacity: 0;
    }
  }

  @keyframes sliding-up-character-circle-card {
    // This moves the character circle card at the center, ensures that it is completely visible, and it is in normal size.
    50% {
      translate: 0;
      opacity: 1;
      scale: 1;
    }

    // The character circle card slightly shrinks in size.
    90% {
      scale: 0.6;
    }

    // The character circle card fades out completely.
    100% {
      opacity: 0;
    }
  }
}


// The King's Dream Section
// This makes sure that the content is centered and it fills the viewport.
.king-dreaming {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 30px;
  text-align: center;
}

// This sets the size, style, and shadow effect for the image.
.king-dreaming-contents {
  position: relative;
  background-color: white;
  box-shadow: 2px 3px 10px #444444;
  overflow: hidden;
}

// This ensures that the image fits within the card.
.king-dreaming-contents img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

// This is to style the elements within the container and hide the text initially.
.king-dreaming-contents .king-dreaming-text {
  display: flex;
  position: absolute;
  color: black;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.9);
  opacity: 0;
  justify-content: center;
  align-items: center;
  top: 0;
  left: 0;
  transition: 0.6s ;
}

// This sets the text size, spacing, and padding.
.king-dreaming-contents .king-dreaming-text p {
  font-size: 2.5rem;
  margin: 20px;
  padding: 0 10px;
  line-height: 1.5;
}

// This reveals the text overlay upon hover.
.king-dreaming-contents:hover .king-dreaming-text {
  opacity: 1;
}

// Media Query to style viewports that are 480px and Below 
// This adjusts the height.
@media (max-width: 480px) {
    .king-dreaming-contents {
        height: 300px;
    }
    // This reduces the text size to 1rem.
    .king-dreaming-contents .king-dreaming-text p {
        font-size: 1rem;
    }
}


// Ibong Adarna Blur Image Section
// This uses a flexbox layout and centers the content within the "ibong-adarna-blur" container.
.ibong-adarna-blur {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 30px;
  padding: 0;
  text-align: center;
}

// This styles the image with blur effect, set its size, and add a slight rounded corners.
.ibong-adarna-blur img {
  border-radius: 20%;
  max-width: 100%;
  height: auto;
  margin: 20px;
  filter: blur(3px);
  transition: filter 0.7s, transform 0.7s;
}

// This removes the blur effect and enlarges the image on hover.
.ibong-adarna-blur img:hover {
  filter: blur(0px);
  transform: scale(1.2);
}

// This sets the p or paragraph tag's color, background color, size, padding, and alignment.
.ibong-adarna-blur p {
  color: white; 
  background-color: black; 
  font-size: 1.5rem; 
  padding: 20px; 
  line-height: 1.5;
  text-align: center; 
}

// Media Query to style viewports that are 768px and Below
@media (max-width: 768px) {
  .ibong-adarna-blur {
      height: auto; 
      padding: 20px;
  }

  .ibong-adarna-blur img {
      margin: 10px;
  }

  .ibong-adarna-blur p {
  font-size: 1.5rem; 
  }
}

// Media Query to style viewports that are 480px and Below
@media (max-width: 480px) {
  .ibong-adarna-blur img {
      max-width: 100%; 
      margin: 5px;
      transform: none; 
  }

  .ibong-adarna-blur p {
      font-size: 1rem;
  }
}


// Don Pedro and Don Diego turned to stone section.

// This sets the paragraph tag within the "turn-to-stone" container color, size, background color, padding, and alignment.
.turn-to-stone p {
  position: relative;
  color: white; 
  background-color: black; 
  font-size: 1.5rem; 
  padding: 20px; 
  line-height: 1.5;
  text-align: center; 
}

// This centers the container.
.diego-and-pedro-flipping-card {
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  color: white;
  text-align: center;
  width: 100%;
}

// This turns the layout to horizontal on screens 768px or wider.
@media screen and (min-width: 768px) {
  .diego-and-pedro-flipping-card {
    flex-direction: row;
  }
}

// This sets the dimensions and positioning of the container. 
.main-flipping-card-container {
  position: relative;
  width: 300px;
  margin: 20px;
  max-width: 100%;
}

// This is to create a 3d effect for the flipping card.
.main-flipping-card {
  transform-style: preserve-3d;
}

// This styles the front and back side of the card.
.diego-and-pedro-flipping-card-front-side,
.diego-and-pedro-flipping-card-back-side {
  background-size: cover;
  background-position: center;
  border-radius: 8px;
  min-height: 500px;
  transition: transform 1.2s ;
  backface-visibility: hidden;
}

// This keeps the front side of the card in its default state.
.diego-and-pedro-flipping-card-front-side {
  transform: rotateY(0deg);
  transform-style: preserve-3d;
}

// This flips the front card upon hover.
.main-flipping-card:hover .diego-and-pedro-flipping-card-front-side {
  transform: rotateY(-180deg);
  transform-style: preserve-3d;
}

// This sets the back side of the card rotated by 180 degrees.
.diego-and-pedro-flipping-card-back-side {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  transform: rotateY(180deg);
  transform-style: preserve-3d;
}

// This flip the back side into view upon hover.
.main-flipping-card:hover .diego-and-pedro-flipping-card-back-side {
  transform: rotateY(0deg);
  transform-style: preserve-3d;
}

// This is for the positioning of the flipping card's heading making it positioned at the top.
.main-flipping-card .flipping-card-heading {
  position: absolute;
  left: 0;
  width: 100%;
  top: 15%;
  transform: translateY(-50%) translateZ(80px);
  z-index: 2;
}

// This sets the h2 or heading 2 tag's font size to 3em.
.diego-and-pedro-flipping-card h2{
  font-size: 3em;
}




// Chapter 2

// This styles the "main-chapter-2-container" container that would hold all the contents for Chapter 2. This include styling its background to black and white text with proper padding.
.main-chapter-2-container { 
  position: relative;
  color: white;
  background-color: black;
  font-size: 1.5rem;
  padding: 3rem;
  line-height: 1.5;
}


// This styles the container that is responsible for the layout of the rotating image carousel.
.main-ibong-adarna-section-2 {
  display: grid;
  position: relative;
  min-block-size: auto;
  background-color: black;
  overflow: hidden;
}


// I used a flexbox for centering the rotating image carousel and sets the height and width of the container.
.rotating-image-carousel {
  display: flex;
  position: relative;
  justify-content: center;
  text-align: center;
  align-items: center;
  width: 100%;
  height: 500px;
  overflow: hidden;
}

// This is used for the 3D rotation animation of the carousel and sets up the transform properties for the rotating images.
.main-rotating-image-carousel-container {
  position: absolute; 
  width: 250px;
  height: 250px;
  transform-style: preserve-3d;
  animation: rotating-the-image-carousel 9s linear infinite;
  transition: transform 0.5s ease;
  z-index: 2;
}

// This pauses or stops the rotating image carousel on hover.
.main-rotating-image-carousel-container:hover {
  animation-play-state: paused;
}

  // I used CSS keyframes for the rotating animation of the image carousel.
  @keyframes rotating-the-image-carousel {
    from {
      transform: perspective(2000px) rotateY(0);
    }
    to {
      transform: perspective(2000px) rotateY(1turn);
    }
  }
  

// This positions each item or image in the carousel in 3D space using rotation and perspective.
.hermit-tools {
  position: absolute;
  inset: 0;
  transform: rotateY(calc((360deg / var(--rotating-image-carousel-item-quantity)) * var(--rotating-image-carousel-item)))
  translateZ(calc((250px + 250px) + 0px));
  overflow: hidden;
}

// This is to ensure that the image inside the hermit tool container and fits its space.
.image-of-the-hermit-tools {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

// This is to ensure that the image maintains its aspect ratio and fits within the container.
.image-of-the-hermit-tools img {
  width: 100%;
  height: 100%;
  object-fit: cover; 
  object-position: center; 
}


// This is to style the text that appears under the carousel including its color, text size, alignment, and spacing.
.hover-to-pause-instruction {
  color: white; 
  font-size: 1.2rem; 
  text-align: center;
  margin-top: 50px; 
}
  
// I set a maximum width to this container and make sure that it is centered.
.image-perspective-effect-main-container {
  width: 80%;
  margin: 0 auto;
  max-width: 700px;
}

// This styling adds a 3D perspective to the images inside it.
.image-perspective-effect {
  position: relative;
  width: 100%;
  perspective: 1000px;

  // This is for the sides of the perspective container.
  .perspective-sides {
    position: absolute;
    width: 50%;
    height: 50%;
  }

  // This is to position the first two sides at the top of the container.
  .perspective-sides:first-child,
  .perspective-sides:nth-child(2) {
    top: 0;
  }

  // This is to position the first and third sides at the left of the container.  
  .perspective-sides:first-child,
  .perspective-sides:nth-child(3) {
    left: 0;
  }

  // This is to position the second and fourth sides at the right of the container.  
  .perspective-sides:nth-child(2),
  .perspective-sides:nth-child(4) {
    right: 0;
  }

  // This is to position the third and fourth sides at the bottom of the container.  
  .perspective-sides:nth-child(3),
  .perspective-sides:nth-child(4) {
    bottom: 0;
  }

  // This is to ensure that the image would fit the container and to add transitions.
  img {
    display: block;
    width: 100%;
    transition: transform 0.6s ease, z-index 0.1s ease;
  }

  // This is to increase the z-index to bring the side to the front.
  &:hover .perspective-sides {
    z-index: 2;
  }
  // This is to lower the z-index of the image to place it behind the sides.
  &:hover img {
    z-index: 1;
  }

  // This is responsible for the rotation of the image when hovering over a specific side.
  .perspective-sides:first-child:hover ~ img {
    transform: perspective(1000px) rotateX(5deg) rotateY(-5deg);
  }
  .perspective-sides:nth-child(2):hover ~ img {
    transform: perspective(1000px) rotateX(5deg) rotateY(5deg);
  }
  .perspective-sides:nth-child(3):hover ~ img {
    transform: perspective(1000px) rotateX(-5deg) rotateY(-5deg);
  }
  .perspective-sides:nth-child(4):hover ~ img {
    transform: perspective(1000px) rotateX(-5deg) rotateY(5deg);
  }
}



// Chapter 3
// This styles the "main-chapter-3-container" container that would hold all the contents for Chapter 2. This include styling its background to white and black text with proper padding.
.main-chapter-3-container {
  color: black;
  background-color: white;
  position: relative;
  font-size: 1.5rem;
  padding: 3rem;
  line-height: 1.5;
}

.armenia-image-container {
  width: 100%; 
  display: flex; 
  justify-content: center; 
  align-items: center;
  margin: 50px 0; 
}

.armenia-image-container img {
  display: block; 
  width: 100%;
  height: auto; 
  max-width: 1200px;
  margin: 0 auto; 
  border-radius: 8px; 
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
}

// Hover effect to slightly enlarge and enhance the shadow on hover
.armenia-image-container img:hover {
  transform: scale(1.1); 
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.5); 
}


// Mysterious Well
// This styles the container that stores the image and the torchlight including its positioning and size.
.well-main-container {
  position: relative;
  width: 100%;
  height: 100vh; 
}

// This is the styling for the torchlight effect that will be displayed over the image.
#torchlight {
  --torchlight-X-coordinate: 50vw;
  --torchlight-Y-coordinate: 50vh; 
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2; 
}

// This is to create that circular light effect that has a radial-gradient.
#torchlight:before {
  content: "";
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;

  // This is the torchlight effect.
  background: radial-gradient(
    circle 40em at var(--torchlight-X-coordinate) var(--torchlight-Y-coordinate),
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 1)
  );
}

// This is the styling for the image shown for the well.
.well-main-container img {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  transform: translate(-50%, -50%); 
  object-fit: cover; 
  object-position: center; 
  z-index: 1; 
}



// This is the styling for the container that holds King Salermo's Trials including using flexbox layout and setting its size.
.king-trials {
  position: relative;
  background-color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 100vh;
  width: 100vw;
  margin-top: 50px;
}

// This is the styling for the select drop down menu including its alignment, size, and spacing.
select {
  text-align: center;
  font-weight: 700;
  letter-spacing: .5em;
  padding: 1em;
  border: 0;
  border-bottom: solid 2px ; 
  &:focus, &:active {
    outline: 0;
  }
}

// I also used a flexbox layout for the container that holds the images of the King's trials. This is where I centered it and added margins.
.king-trials-images {
  display: flex;
  justify-content: center;
  align-items: center;
  color: black;
  margin: 50px;

  // This is to hide the images and loading message at first.
  img,
  .king-trials-loading {
    display: none;
    letter-spacing: .3em;
    font-weight: 700;
  }



  // This is when a trial is being loaded.
  &.load-selected-trial {
    background: white;
    // This is to show the loading message.
    .king-trials-loading {
      display: block;
      animation: load-selected-trial 1.6s;
    }
  }
}



// This is to show the image that corresponds to its selected trial based on the data attributes.
.king-trials-images {
  &[data-king-trial-selected="1"] img[data-king-trial-image="1"],
  &[data-king-trial-selected="2"] img[data-king-trial-image="2"],
  &[data-king-trial-selected="3"] img[data-king-trial-image="3"],
  &[data-king-trial-selected="4"] img[data-king-trial-image="4"],
  &[data-king-trial-selected="5"] img[data-king-trial-image="5"],
  &[data-king-trial-selected="6"] img[data-king-trial-image="6"],
  &[data-king-trial-selected="7"] img[data-king-trial-image="7"] {
    display: block;
  }
}

// I used a @keyframes animation to increase the letter-spacing during the animation for added loading effect.
@keyframes load-selected-trial {
  to {
    letter-spacing: .5em;
  }
}

// This is the styling for the images within the "king-trials-images" container ensuring that it is hidden by default, and when showed, it ensures the image covers the entire container without any distortion.
.king-trials-images img {
  display: none;   
  width: 100%;     
  height: 100%;     
  object-fit: cover; 
}




// This is the styling for the wrapper for both the sliding image cards that unveil their texts. This includes its flexbox layout, being stacked on top of another, and their gap.
.main-sliding-unveil-card-container {
  display: flex;
  flex-direction: column; 
  gap: 50px;
}

// This is the styling for the card including its size, rounded corners, and pointer events.
.sliding-unveil-card-container {
  position: relative;
  width: 60vw;
  height: 60vh;
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
}

// This is to position the second card to the right side of the screen.
.sliding-unveil-card-container.right-side-card {
  margin-left: auto;
}

// This is the styling for the container that would unveil the image and text.
.unveiling-image-card {
  position: relative;
  width: 100%;
  height: 100%;
}

// This is the container that holds the front view of the card. This sets a flexbox layout, size of the card, alignment, positioning, and transition.
.unveiling-image-card .unveiling-image-card-front-view {
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;
  transition: 0.6s;
  overflow: hidden;
}

// This is the styling for the image inside the front view of the card. This styling ensures that it would fit the container while maintaning its aspect ratio.
.unveiling-image-card .unveiling-image-card-front-view img {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  top: 0;
  left: 0;
  border-radius: 8px;
}

// This styles the paragraph or p tag within the container. Its styling includes positioning it over the image, white text color, semi-transparent black background color, size, alignment, rounded corners, and transition.
.unveiling-image-card .unveiling-image-card-front-view p {
  position: absolute;
  color: white;
  background-color: rgba(0, 0, 0, 0.6);
  font-size: 1.5em;
  font-weight: 700;
  padding: 10px 20px;
  text-align: center;
  top: 70px;
  left: 50%;
  transform: translateX(-50%);
  border-radius: 8px;
  z-index: 2;
  transition: 1.2s;
}

// This is the styling for the back view of the image card that is initially hidden.
.unveiling-image-card .unveiling-image-card-back-view {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  color: white;
  background: black;
  padding: 20px;
  border-radius: 8px;
  transform: translateX(-100%);
  transition: 1.2s;
}

// The following lines are for the on hover effects for the first image card.

// This unveils the backview of the card by sliding it into view.
.unveiling-image-card:hover .unveiling-image-card-back-view {
  transform: translateY(0);
}

// This slides the front content out of the view to the left.
.unveiling-image-card:hover .unveiling-image-card-front-view {
  transform: translateX(-50%);
  transition: 2s;
}

// This is to hide the Hover me text upon hover.
.unveiling-image-card:hover .unveiling-image-card-front-view p {
  opacity: 0;
}


// This is the styling for the text or paragraph in between the two image cards.
.paragraph-chapter5 {
  box-sizing: border-box; 
  color: white;
  background-color: black;
  width: 100%;
  padding: 20px; 
  margin: 0; 
}

// This is the default positioning of the 2nd image card, which is positioned off-screen to the right.
.right-slide-unveil .unveiling-image-card-back-view {
  transform: translateX(100%); 
}

// This is to reveal the back view of the image card.
.right-slide-unveil:hover .unveiling-image-card-back-view {
  transform: translateX(0);
}

// This is to to show the front view in the default position.
.right-slide-unveil .unveiling-image-card-front-view {
  transform: translateX(0);
}

// This slides the front content out of the view to the right.
.right-slide-unveil:hover .unveiling-image-card-front-view {
  transform: translateX(50%);
  transition: 2s;
}

.unveiling-image-card-back-view p {
  font-size: 1em;
  margin: 20px;
}

// Media Query to style viewports that are 480px and Below
@media (max-width: 480px) {
  .unveiling-image-card-back-view p {
    margin: 10px;
    font-size: 20px;
  }
}

// Image that goes up upon hover.

// This styles the "main-image-up-container" container by centering its contents horizontally and vertically using flexbox layout.
.main-image-up-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 50px;
}

// This is the styling to give the image container a 3D rotation effect.
.image-up-container {
  display: flex;
  align-items: center;
  justify-content: center;
  transform: rotateX(-50deg) rotateY(5deg) rotateZ(30deg);
  transition: 1.2s;
  cursor: pointer;
}

// This styling ensures that the image fits inside the container while maintaining its aspect ratio.
.image-up-container img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

// This is to remove the rotation upon hovering.
.image-up-container:hover {
  transform: rotate(0deg);
}

// This is to add a blue, red, and yellow gradient background color.
.image-up-container, .image-up-container::before {
  background: linear-gradient(50deg, blue 0%, red 50%, yellow 100%);
}

// This is for the glowing blur effect behind the container.
.image-up-container::before {
  content: '';
  position: absolute;
  width: 105%;
  height: 105%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  filter: blur(50px);
  z-index: -1;
}





// This centers the "main-book-open-container" container.
.main-book-open-container {
  display: flex;
  justify-content: center;
  text-align: center;
}

// This is to give the "book-open-container" container a 3d perspective effect.
.book-open-container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  color: black;
  width: 80%;
  height: 250px;
  background-color: white;
  transform: preserve-3d;
  perspective: 2000px;
}

// This is the styling for the paragraph or p tag within ".book-open-container" container including setting its font size and giving it a bold font weight.
.book-open-container p {
  font-size: 3.5em;
  font-weight: 700;
}

// This is the styling for the paragraph or p tag ("Hover me" within ".book-open-cover-with-hover-me-text" container including setting its font size and giving it a bold font weight.
.book-open-cover-with-hover-me-text p {
  font-size: 2em;
  font-weight: 700;
}

// This is the styling for the book cover with hover effect.
.book-open-cover-with-hover-me-text {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  background-color: white;
  width: 100%;
  height: 100%;
  transform-origin: 0;
  transition: 1.2s;
  cursor: pointer;
}

// This is the hover effect that gives it the opening book effect by rotating the book cover 100 degrees around the Y-axis.
.book-open-container:hover .book-open-cover-with-hover-me-text {
  transform: rotatey(-100deg);
}



// Credits Section
// For this section, I used a parallax effect which makes the image keep still in the background while the text is the one scrolling.
.main-credits-section-container {
  position: relative;
  background: url(/Images/Ibong\ Adarna.png) no-repeat fixed center / cover;
  color: white;
}

// I added a semi-transparent dark overlay so that the text would be readability over the background image.
.main-credits-section-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.347); 
}

// This is where I ensured that the contents is position within the parent container and spaced correctly.
.main-credits-section-container div {
  position: relative;
  margin: 20px;
  padding: 100px 0;
}

// I styled the h1 or heading tag to have 3em of font size and to be bold.
.main-credits-section-container h1 {
  font-size: 3em;
  font-weight: 700;
}

// I styled the p or paragraph tag to have 1.5em of font size and 1.4 space between the lines.
.main-credits-section-container p {
  font-size: 1.5em;
  line-height: 1.4;
}

// This adds a white line below the container to divide each section.
.credits-section-contents {
  border-bottom: 3px solid white;
}

// Media Query to style viewports that are 480px and Below 
@media (max-width: 480px) {
  .main-credits-section-container {
  font-size: 10px;
  }
}



// Footer Section
// I created a footer that would have a text between two images that would continuously loop through the screen. It would go from right to left.

// THis is to center the content within the footer horizontally and vertically. This is where I also set the height and hid any overflow.
footer {
  display: flex; 
  justify-content: center;
  align-items: center; 
  font-size: 1.5em; 
  color: white;
  background-color: black;
  text-align: center;
  position: relative;
  width: 100%;
  height: 3em; 
  overflow: hidden;
}

// This styles the text to be on one line and applies the sliding animation.
footer p {
  white-space: nowrap;
  position: absolute;
  letter-spacing: 2px;
  animation: slidefootertextLefttoRight 15s linear infinite;
}

// This is to position the images before and after the text.
footer p::before,
footer p::after {
  content: '';
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 50px; 
  height: 50px;
  background-size: cover;
  background-position: center;
  display: block;
}

// This is the Ibong Adarna Logo image before the text.
footer p::before {
  left: -60px;
  background-image: url('/Images/Ibong\ Adarna\ Logo.jpg'); 
}

// This is the Ibong Adarna Logo image after the text.
footer p::after {
  right: -60px; 
  background-image: url('/Images/Ibong\ Adarna\ Logo.jpg');
}

// This is the @keyframes animation for the text within the footer.
@keyframes slidefootertextLefttoRight {
  0% {
    // The text is initially positioned off-screen to the right.
    left: 100%;
  }
  50% {
    // This centers the text.
    left: 50%;
    transform: translateX(-50%); 
  }
  100% {
    // The text moves off-screen to the left.
    left: -100%;
  }
}



// This is to hide the elements with the class .hidesection.
.hidesection {
  display: none;
}

// This is the styling for the sign-up and login forms including their size and color.
.sign-up-log-in-form-container {
  margin: auto;
  max-width: 500px;
  background: white;
  padding: 30px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.625);
}

// This is the styling for the h1 or heading 1 tags within sign-up and login forms including their size, spacing, and alignment.
.sign-up-log-in-form-container h1 {
  font-size: 3em;
  margin-bottom: 40px;
  text-align: center;
}

// This is to center the p or paragraph tag within the .sign-up-log-in-form-container container.
.sign-up-log-in-form-container p {
  text-align: center;
}

// This is to style the input forms within the .sign-up-log-in-form-container container includings their space, size, and border color.
.sign-up-log-in-form-container input {
  width: 100%;
  padding: 15px;
  margin: 10px 0;
  border: 1px solid black;
}

// This is to style the button within the .sign-up-log-in-form-container container includings their text size, color, spacing, size, and transition duration.
.sign-up-log-in-form-container button {
  font-size: 1em;
  color: white;
  background-color: black;
  width: 100%;
  padding: 10px;
  margin-top: 20px;
  border-radius: 8px;
  border: none;
  transition: 0.6s;
  cursor: pointer;
}

// This is to enlarge and and change the color of the button upon hover.
.sign-up-log-in-form-container button:hover {
  transform: scale(1.1);
  background-color: #333;
}



// Reveal effect
// This is the styling responsible for revealing the contents of the website when scrolling.

// This hides the content at first and moves it downward.
.reveal-content {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 1s ease-out, transform 1s ease-out;
}

// This class is added through JavaScript and used to smoothly reveal the content and positions it to its original position.
.reveal-content.contentIsVisible {
  opacity: 1;
  transform: translateY(0);
}



// Rainbow Cursor Animation

// This is to create a circular rainbow-colored cursor that would follow the user's cursor.
.rainbow-cursor {
  position: absolute;
  width: 6px; 
  height: 6px;
  border-radius: 50%;
  background: conic-gradient(from 0deg, red, orange, yellow, green, blue, indigo, violet, red);
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.8), 0 0 20px rgba(255, 255, 255, 0.5); 
  pointer-events: none;
  animation: rainbowTrail 1s ease-out forwards;
}

// Rainbow Cursor Keyframe Animation
@keyframes rainbowTrail {
  // This is the start of the cursor animation with no movement and it is at a normal size.
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  // This moves and reduces the cursor diagonally which eventually vanishes it out.
  100% {
    transform: translate(-50px, -50px) scale(0.5); 
    opacity: 0;
  }
}